(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{372:function(s,t,a){s.exports=a.p+"assets/img/hmr2.85a0d873.png"},436:function(s,t,a){s.exports=a.p+"assets/img/hmr1.3b23c829.png"},483:function(s,t,a){"use strict";a.r(t);var e=a(33),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"性能优化-构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化-构建"}},[s._v("#")]),s._v(" 性能优化 - 构建")]),s._v(" "),e("ol",[e("li",[s._v("构建 —— 开发阶段 —— 开发效率")]),s._v(" "),e("li",[s._v("传输 —— 打包后的 js 代码传输到浏览器的时间 ——总传输量、文件数量、浏览器缓存")]),s._v(" "),e("li",[s._v("运行 —— js 代码在浏览器端的运行速度 —— 代码质量 （尾递归优化等，永远不要过早关注性能）")])]),s._v(" "),e("h2",{attrs:{id:"减少模块解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#减少模块解析"}},[s._v("#")]),s._v(" 减少模块解析")]),s._v(" "),e("ul",[e("li",[s._v("甚至不解析模块。")]),s._v(" "),e("li",[s._v("什么叫模块解析？AST抽象语法树分析，记录依赖报存到 dependencies 中，替换依赖函数。")]),s._v(" "),e("li",[s._v("哪些模块不用解析呢？模块中无其他依赖（不进行 AST 抽象语法树分析，一些已经打包好的第三方库，例如：jquery）\n"),e("ul",[e("li",[e("code",[s._v("module: { noParse: /jquery/ }")])])])])]),s._v(" "),e("h2",{attrs:{id:"优化-loader-性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化-loader-性能"}},[s._v("#")]),s._v(" 优化 loader 性能")]),s._v(" "),e("h3",{attrs:{id:"限制-loader-的使用范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限制-loader-的使用范围"}},[s._v("#")]),s._v(" 限制 loader 的使用范围")]),s._v(" "),e("ul",[e("li",[s._v("babel-loader 转换 es6 的语法，但是某些库把本身就是低版本写的，不需要 babel-loader 处理，例如：lodash 。")]),s._v(" "),e("li",[s._v("通过 "),e("code",[s._v("module.rules.exclude")]),s._v(" 和 "),e("code",[s._v("module.rules.include")]),s._v(" 排除掉或者仅仅支持哪些库进行配置。\n"),e("ul",[e("li",[s._v("暴力写法，直接排除 "),e("code",[s._v("node_modules")]),s._v(" 只管 src 目录下的代码。")]),s._v(" "),e("li",[s._v("noParse 和 exclude 不冲突，因为模块解析不包含 loader 处理。")])])])]),s._v(" "),e("h3",{attrs:{id:"缓存-loader-结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存-loader-结果"}},[s._v("#")]),s._v(" 缓存 loader 结果")]),s._v(" "),e("ul",[e("li",[s._v("代码内容不变，经过 loader 处理，结果不变。")]),s._v(" "),e("li",[s._v("cache-loader 最后使用缓存 loader ，它最后执行的，怎么能实现后续使用缓存呢？\n"),e("ul",[e("li",[s._v("pitch 过程 loader.pitch = (filePath) => {}")])])]),s._v(" "),e("li",[s._v("指定缓存的路径")])]),s._v(" "),e("h3",{attrs:{id:"开启多线程-大项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开启多线程-大项目"}},[s._v("#")]),s._v(" 开启多线程（大项目）")]),s._v(" "),e("ul",[e("li",[s._v("thread-loader 会开启一个线程池，线程池中包含适量的线程。")]),s._v(" "),e("li",[s._v("放到 cache-loader 后面，因为主要是为了处理模块解析耗时问题。后续的 loader 都会放到新线程中处理。\n"),e("ol",[e("li",[s._v("用 webapck api 生成文件 —— 不在 webpack 主线程。")]),s._v(" "),e("li",[s._v("不同使用自定义的 plugin api , 例如：  "),e("code",[s._v("mini-css-extact-plugin")]),s._v(" 提供的 plugin 会向 webpack 注入了新的 api ,这时候就会报错。")]),s._v(" "),e("li",[s._v("无法访问 webpack options 。")]),s._v(" "),e("li",[s._v("放 babel-loader 等。")])])])]),s._v(" "),e("p",[s._v("测试几核的 cpu")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" cpus "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'os'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("cpus"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("cpus")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"热替换-hmr"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#热替换-hmr"}},[s._v("#")]),s._v(" 热替换(HMR)")]),s._v(" "),e("blockquote",[e("p",[s._v("hot module replacement 热替换并不能降低构建时间（可能还会稍微增加），但可以降低代码改动到效果呈现的时间。")])]),s._v(" "),e("p",[s._v("当使用"),e("code",[s._v("webpack-dev-server")]),s._v("时，考虑代码改动到效果呈现的过程")]),s._v(" "),e("p",[e("img",{attrs:{src:a(436),alt:"代码改动"}})]),s._v(" "),e("p",[s._v("而使用了热替换后，流程发生了变化:")]),s._v(" "),e("p",[e("img",{attrs:{src:a(372),alt:"热替换"}})]),s._v(" "),e("h3",{attrs:{id:"使用和原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用和原理"}},[s._v("#")]),s._v(" 使用和原理")]),s._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("exports "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  devServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    hot"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  plugins"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可选")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("webpack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("HotModuleReplacementPlugin")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 判断是否开启热更新")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  module"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("accept")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 接受热更新")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("webpack-dev-server")]),s._v(" 会向打包结果中注入 module.hot 属性，重新打包后，会调用 "),e("code",[s._v("location.reload()")]),s._v(" 来刷新页面，但是如果运行了 "),e("code",[s._v("module.hot.accept")]),s._v(" ，让 "),e("code",[s._v("webpack-dev-server")]),s._v(" 通过 "),e("strong",[s._v("socket 管道")]),s._v("，把服务器内容发送到浏览器。")]),s._v(" "),e("li",[e("img",{attrs:{src:a(372),alt:"热替换"}})]),s._v(" "),e("li",[s._v("将结果交给 "),e("code",[s._v("HotModuleReplacementPlugin")]),s._v(" 注入的代码执行，插件会覆盖原始代码，让代码重新执行。")])]),s._v(" "),e("h3",{attrs:{id:"样式热替换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#样式热替换"}},[s._v("#")]),s._v(" 样式热替换")]),s._v(" "),e("ul",[e("li",[s._v("style-loader ,因为热替换发生时，只会简单地重新运行模块代码，因此 style-loader  的代码一运行，就会重新设置 style 中样式，但是 "),e("code",[s._v("mini-css-extract-plugin")]),s._v(" 生成的文件是在"),e("strong",[s._v("构建期间")]),s._v("，运行期间也无法改动文件，因此是无效的。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);